name: Cuda stable

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: gpu
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Create virtual environment
        run: |
          python -m venv .venv
          source .venv/bin/activate
        
        - name: Setup CUDA
        uses: Jimver/cuda-toolkit@v0.2.14
        with:
          cuda: '12.1.0'
          method: 'network'
          sub-packages: '["nvcc", "cudart", "cublas", "cufft", "curand", "cusolver", "cusparse", "thrust"]'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install uv
          pip install torch torchvision --index-url https://download.pytorch.org/whl/cu121
          pip install "numpy<2.0.0"
          if [ -f requirements.txt ]; then
            uv pip install -r requirements.txt
          fi

      - name: Run unit tests
        run: |
          source .venv/bin/activate
          python -m unittest modules/tests/test.py -v

      - name: Test pipeline variants
        run: |
          source .venv/bin/activate
          # Test basic pipeline
          python modules/user/pipeline.py "1girl" 128 128 1 1 --hires-fix --adetailer --autohdr
          # Test flux mode  
          python modules/user/pipeline.py "1girl" 128 128 1 1 --flux
          # Test image to image
          ppython modules/user/pipeline.py "./_internal/output/Classic/LD_00001_.png" 128 128 1 1 --img2img

      - name: Upload test artifacts
        if: always()  # Upload even if tests fail
        uses: actions/upload-artifact@v3
        with:
          name: test-outputs-${{ github.sha }}
          path: |
            LD-*.png
            LD-HF-*.png 
            LD-Flux-*.png
          retention-days: 5

      - name: Report status
        if: always()
        run: |
          if [ ${{ job.status }} == 'success' ]; then
            echo "All tests passed successfully!"
          else  
            echo "Some tests failed. Check the logs above for details."
            exit 1
          fi
